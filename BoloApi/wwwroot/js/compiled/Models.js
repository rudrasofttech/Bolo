"use strict"; function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }) } else { obj[key] = value } return obj } class UserInfo { constructor() { _defineProperty(this, "memberID", void 0); _defineProperty(this, "connectionID", void 0); _defineProperty(this, "name", void 0); _defineProperty(this, "lastpulse", void 0); _defineProperty(this, "videoCapable", void 0); _defineProperty(this, "peerCapable", void 0); _defineProperty(this, "stream", void 0); _defineProperty(this, "pic", void 0); _defineProperty(this, "bio", void 0); this.memberID = "00000000-0000-0000-0000-000000000000"; this.connectionID = ""; this.name = ""; this.lastpulse = Date.now(); this.videoCapable = true; this.peerCapable = true; this.stream = null; this.pic = "" } isAlive() { var dt = new Date(this.lastpulse); dt.setSeconds(dt.getSeconds() + 40); if (dt < Date.now()) { return false } else { return true } } } var MessageEnum = { Text: 1, MemberAdd: 2, MemberLeave: 3, File: 4 }; var BoloRelationType = { Temporary: 1, Confirmed: 2, Search: 3, Blocked: 4 }; var MessageStatusEnum = { notify: 0, inqueue: 1, inprogress: 2, ready: 5, sent: 3, error: 4 }; class MessageInfo { constructor() { _defineProperty(this, "sender", void 0); _defineProperty(this, "timeStamp", void 0); _defineProperty(this, "type", void 0); _defineProperty(this, "text", void 0); _defineProperty(this, "status", void 0); _defineProperty(this, "progresspercent", void 0); _defineProperty(this, "file", void 0); this.progresspercent = 0; this.status = MessageStatusEnum.inprogress; this.file = null } }