"use strict"; class Meetings extends React.Component { constructor(e) { super(e); let t = !0; null == localStorage.getItem("token") && (t = !1), this.state = { loading: !1, loggedin: t, bsstyle: "", message: "", meetingid: "", name: "", purpose: "", showmeetinglistmodal: !1, meetinglist: [] }, this.loginHandler = this.loginHandler.bind(this), this.handleStartMeeting = this.handleStartMeeting.bind(this), this.handleChange = this.handleChange.bind(this), this.handlePrevMeeting = this.handlePrevMeeting.bind(this) } loginHandler() { null != localStorage.getItem("token") && this.setState({ loggedin: !0 }) } handlePrevMeeting() { if (this.state.showmeetinglistmodal) this.setState({ showmeetinglistmodal: !1 }); else { this.setState({ loading: !0 }); let e = localStorage.getItem("token"); null === e && (e = ""), fetch("//" + window.location.host + "/api/Meetings", { method: "get", headers: { Authorization: "Bearer " + e } }).then(e => { 401 === e.status ? this.setState({ loading: !1 }) : 200 === e.status ? e.json().then(e => { this.setState({ loading: !1, meetinglist: e, showmeetinglistmodal: !0 }) }) : this.setState({ loading: !1 }) }) } } handleStartMeeting(e) { e.preventDefault(), fetch("api/Meetings", { method: "post", body: JSON.stringify({ Name: this.state.name, Purpose: this.state.purpose }), headers: { Authorization: "Bearer " + localStorage.getItem("token"), "Content-Type": "application/json" } }).then(e => { this.setState({ loading: !1 }), 200 === e.status ? e.json().then(e => { console.log(e), window.location.href = "/m/" + e.id }) : this.setState({ bsstyle: "danger", message: "Unable to create a meeting. Please try again." }) }) } handleChange(e) { switch (e.target.name) { case "name": this.setState({ name: e.target.value }); break; case "purpose": this.setState({ purpose: e.target.value }) } } renderMeetingList() { if (this.state.showmeetinglistmodal) { var e = []; for (var t in this.state.meetinglist) { var a = this.state.meetinglist[t]; null !== a.name && "" !== a.name && e.push(React.createElement("tr", { key: a.id }, React.createElement("td", null, React.createElement("strong", null, a.name), React.createElement("br", null), React.createElement("span", null, moment(a.createDate.replace(" UTC", "")).fromNow(!0))), React.createElement("td", { style: { textAlign: "right" } }, React.createElement("a", { className: "btn btn-sm btn-info", href: "//" + window.location.host + "/m/" + a.id }, "Start Meeting")))) } return React.createElement("div", { className: "modal d-block", id: "meetingModal", tabindex: "-1", "aria-hidden": "true" }, React.createElement("div", { className: "modal-dialog modal-dialog-scrollable" }, React.createElement("div", { className: "modal-content" }, React.createElement("div", { className: "modal-header" }, React.createElement("h5", { className: "modal-title" }, "Previous Meetings"), React.createElement("button", { type: "button", className: "close", "data-dismiss": "modal", "aria-label": "Close", onClick: this.handlePrevMeeting }, React.createElement("span", { "aria-hidden": "true" }, "×"))), React.createElement("div", { className: "modal-body" }, React.createElement("div", { className: "table-responsive" }, React.createElement("table", { className: "table table-borderless" }, React.createElement("tbody", null, e))))))) } return null } render() { let e = this.state.loading ? React.createElement("div", { className: "progress" }, React.createElement("div", { className: "progress-bar progress-bar-striped progress-bar-animated", role: "progressbar", "aria-valuenow": "100", "aria-valuemin": "0", "aria-valuemax": "100", style: { width: "100%" } })) : null; if (this.state.loggedin) { let t = "" !== this.state.message ? React.createElement("div", { className: "fixedBottom " }, React.createElement(MessageStrip, { message: this.state.message, bsstyle: this.state.bsstyle })) : null; return React.createElement("div", null, React.createElement(NavMenu, { onLogin: this.loginHandler, registerFormBeginWith: !1, fixed: !1 }), React.createElement("main", { role: "main", className: "inner cover meetingsmain mr-5 ml-5" }, React.createElement("h1", { className: "cover-heading" }, "Online Meetings"), React.createElement("p", { className: "lead" }, "Online meetings are the need of the hour. Connect with people for quick status updates, important discussions, future planning or interviews. Salient Features-"), React.createElement("div", { className: "row" }, React.createElement("div", { className: "col-md-6" }, React.createElement("form", { onSubmit: this.handleStartMeeting }, React.createElement("div", { className: "form-group" }, React.createElement("label", { htmlFor: "meetingnametxt" }, "Name"), React.createElement("input", { type: "text", className: "form-control", id: "meetingnametxt", placeholder: "Friendly name of your meeting", name: "name", maxLength: "50", onChange: this.handleChange })), React.createElement("div", { className: "form-group" }, React.createElement("label", { htmlFor: "purposetxt" }, "Purpose"), React.createElement("input", { type: "text", className: "form-control", id: "purposetxt", placeholder: "What is the agenda of the meeting", maxLength: "250", name: "purpose", onChange: this.handleChange })), React.createElement("h3", null, React.createElement("button", { type: "submit", className: "btn btn-primary my-2 startmeeting" }, "Create a Meeting"), React.createElement("button", { type: "button", className: "btn my-2 btn-warning float-right startmeeting", onClick: this.handlePrevMeeting }, "Previous Meetings"))), e))), React.createElement(HeartBeat, { activity: "1", interval: "3000" }), t, this.renderMeetingList()) } return React.createElement("div", null, React.createElement(NavMenu, { onLogin: this.loginHandler, registerFormBeginWith: !1, fixed: !1 }), React.createElement("main", { role: "main", className: "inner cover meetingsmain mr-5 ml-5" }, React.createElement("h1", { className: "cover-heading" }, "Online Meetings"), React.createElement("p", { className: "lead" }, "Online meetings are the need of the hour. Connect with people for quick status updates, important discussions, future planning or interviews. Salient Features-"), React.createElement("ul", null, React.createElement("li", null, "Text, Audio and Video Chat Enabled"), React.createElement("li", null, "No need to install any special software, works on chrome, mozilla, safari and edge."), React.createElement("li", null, "Peer to Peer technlogy"), React.createElement("li", null, "Secured with SSL"), React.createElement("li", null, "Free to use")), React.createElement("p", { className: "lead" }, React.createElement("button", { type: "button", className: "btn btn-lg btn-secondary" }, "Login to start a Meeting"))), React.createElement(HeartBeat, { activity: "1", interval: "20000" })) } }