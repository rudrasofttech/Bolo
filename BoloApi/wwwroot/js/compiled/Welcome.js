"use strict"; class Welcome extends React.Component { constructor(e) { super(e); let t = !0; null === localStorage.getItem("token") && (t = !1), this.state = { loading: !1, loggedin: t, myself: null, bsstyle: "", message: "", token: null === localStorage.getItem("token") ? "" : localStorage.getItem("token"), registermodal: !1, showprofilemodal: !1, memberpic: "" }, this.loginHandler = this.loginHandler.bind(this), this.handleLogin = this.handleLogin.bind(this), this.toggleProfileModal = this.toggleProfileModal.bind(this), this.closeRegisterModal = this.closeRegisterModal.bind(this) } componentDidMount() { null != localStorage.getItem("token") && this.validate(localStorage.getItem("token")) } loginHandler() { null != localStorage.getItem("token") && (this.validate(localStorage.getItem("token")), this.setState({ loggedin: !0, registermodal: !1, registerFormBeginWith: !1 })) } validate(e) { this.setState({ loading: !0 }), fetch("//" + window.location.host + "/api/Members/Validate", { method: "get", headers: { Authorization: "Bearer " + e } }).then(e => { 401 === e.status ? (localStorage.removeItem("token"), this.setState({ loggedin: !1, loading: !1, token: null })) : 200 === e.status && e.json().then(e => { this.setState({ loggedin: !0, loading: !1, myself: e, memberpic: e.pic }) }) }) } handleLogin(e) { e.preventDefault(), this.setState({ registermodal: !0, registerFormBeginWith: !1 }) } toggleProfileModal() { this.setState({ showprofilemodal: !this.state.showprofilemodal }) } closeRegisterModal() { this.setState({ registermodal: !1 }) } renderRegisterModal() { return this.state.registermodal ? React.createElement("div", { className: "modal d-block", "data-backdrop": "static", "data-keyboard": "false", tabIndex: "-1", role: "dialog", "aria-labelledby": "staticBackdropLabel", "aria-hidden": "true" }, React.createElement("div", { className: "modal-dialog modal-lg", style: { color: "#000", textShadow: "none", textAlign: "left", borderRadius: "5px" } }, React.createElement("div", { className: "modal-content" }, React.createElement("div", { className: "modal-body" }, React.createElement("button", { type: "button", className: "close pull-right", "data-dismiss": "modal", "aria-label": "Close", onClick: this.closeRegisterModal }, React.createElement("span", { "aria-hidden": "true" }, "X")), React.createElement(RegisterForm, { onLogin: this.loginHandler, beginWithRegister: this.state.registerFormBeginWith }))))) : null } renderProfileModal() { return this.state.showprofilemodal ? React.createElement("div", { className: "modal d-block", "data-backdrop": "static", "data-keyboard": "false", tabIndex: "-1", role: "dialog", "aria-labelledby": "staticBackdropLabel", "aria-hidden": "true" }, React.createElement("div", { className: "modal-dialog modal-dialog-scrollable modal-xl", style: { color: "#000", textShadow: "none", textAlign: "left", borderRadius: "5px" } }, React.createElement("div", { className: "modal-content" }, React.createElement("div", { className: "modal-body" }, React.createElement("button", { type: "button", className: "close float-right", "data-dismiss": "modal", "aria-label": "Close", onClick: this.toggleProfileModal }, React.createElement("span", { "aria-hidden": "true" }, "X")), React.createElement(ManageProfile, { onProfileChange: this.handleProfileChange }))))) : null } render() { let e = null, t = this.state.loading ? React.createElement("div", { className: "progress", style: { height: "5px" } }, React.createElement("div", { className: "progress-bar progress-bar-striped progress-bar-animated", role: "progressbar", "aria-valuenow": "75", "aria-valuemin": "0", "aria-valuemax": "100", style: { width: "100%" } })) : null, a = null; null === this.state.myself ? a = React.createElement("button", { className: "btn btn-lg btn-link m-2", style: { color: "#fff" }, onClick: this.handleLogin }, "Sign In / Register") : (this.state.loggedin && "" !== this.state.memberpic && (e = React.createElement("img", { src: this.state.memberpic, style: { border: "2px solid #fff", marginRight: "10px" }, width: "40", height: "40", className: "rounded-circle" })), a = React.createElement("button", { className: "btn btn-lg btn-link m-2", style: { color: "#fff" }, onClick: this.toggleProfileModal }, e, "Welcome, ", this.state.myself.name)); let l = React.createElement("p", { className: "lead" }, a, React.createElement("br", null), React.createElement("a", { href: "/meetings", className: "btn btn-lg btn-secondary m-2" }, "Start a Meeting"), React.createElement("a", { href: "/chat", className: "btn btn-lg btn-secondary m-2" }, "Start a Conversation")); return React.createElement(React.Fragment, null, t, l, this.renderRegisterModal(), this.renderProfileModal()) } }