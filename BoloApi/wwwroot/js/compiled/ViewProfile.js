"use strict"; class ViewProfile extends React.Component { constructor(props) { super(props); let loggedin = true; if (localStorage.getItem("token") === null) { loggedin = false } this.state = { loading: false, loggedin: loggedin, token: localStorage.getItem("token") == null ? '' : localStorage.getItem("token"), profile: this.props.profile === undefined ? null : this.props.profile } } componentDidMount() { } componentDidUpdate(prevProps, prevState) { } static getDerivedStateFromProps(props, state) { if (props.channel !== state.channel || props.profileid !== state.profileid || props.profile !== state.profile) { return { channel: props.channel, profileid: props.profileid, profile: props.profile === undefined ? null : props.profile } } return null } processString(options) { var key = 0; function processInputWithRegex(option, input) { if (!option.fn || typeof option.fn !== 'function') { return input } if (!option.regex || !(option.regex instanceof RegExp)) { return input } if (typeof input === 'string') { var regex = option.regex; var result = null; var output = []; while ((result = regex.exec(input)) !== null) { var index = result.index; var match = result[0]; output.push(input.substring(0, index)); output.push(option.fn(key += 1, result)); input = input.substring(index + match.length, input.length + 1); regex.lastIndex = 0 } output.push(input); return output } else if (Array.isArray(input)) { return input.map(function (chunk) { return processInputWithRegex(option, chunk) }) } else { return input } } return function (input) { if (!options || !Array.isArray(options) || !options.length) { return input } options.forEach(function (option) { return input = processInputWithRegex(option, input) }); return input } } renderText(text) { let parts = text.split(/(http|https):\/\/(\S+)\.([a-z]{2,}?)(.*?)( |\,|$|\.)/gim); for (let i = 1; i < parts.length; i += 2) { parts[i] = React.createElement("a", { key: 'link' + i, href: parts[i] }, parts[i].split('\n').map((item, key) => { return React.createElement(React.Fragment, { key: key }, item, React.createElement("br", null)) })) } return parts } render() { if (this.state.profile !== null) { var d = new Date(); let pic = React.createElement(React.Fragment, null, React.createElement("img", { src: "/images/nopic.jpg", style: { width: "50px" }, className: "rounded mx-auto d-block img-fluid", alt: "" })); if (this.state.profile.pic !== "") { pic = React.createElement(React.Fragment, null, React.createElement("img", { src: this.state.profile.pic, className: "rounded mx-auto d-block img-fluid", alt: "" })) } let age = this.state.profile.birthYear > 0 ? React.createElement(React.Fragment, null, d.getFullYear() - this.state.profile.birthYear, " Years Old") : null; let address = this.state.profile.city + ' ' + this.state.profile.state + ' ' + this.state.profile.country; if (address.trim() !== '') { address = 'From ' + address } let config = [{ regex: /(http|https):\/\/(\S+)\.([a-z]{2,}?)(.*?)( |\,|$|\.)/gim, fn: (key, result) => React.createElement("span", { key: key }, React.createElement("a", { target: "_blank", href: `${result[1]}://${result[2]}.${result[3]}${result[4]}` }, result[2], ".", result[3], result[4]), result[5]) }, { regex: /\n/gim, fn: (key, result) => React.createElement("br", { key: key }) }, { regex: /(\S+)\.([a-z]{2,}?)(.*?)( |\,|$|\.)/gim, fn: (key, result) => React.createElement("span", { key: key }, React.createElement("a", { target: "_blank", href: `http://${result[1]}.${result[2]}${result[3]}` }, result[1], ".", result[2], result[3]), result[4]) }]; var bio = React.createElement("p", null, this.processString(config)(this.state.profile.bio)); return React.createElement("div", { className: "text-center" }, pic, React.createElement("h4", null, this.state.profile.name), React.createElement("p", null, bio), React.createElement("p", null, React.createElement("em", null, age, " ", address))) } else { return null } } }