"use strict"; class RegisterForm extends React.Component { constructor(e) { super(e); let t = !0; null == localStorage.getItem("token") && (t = !1), this.state = { showregisterform: e.beginWithRegister, GenerateOTPButton: !0, loginemail: "", OTP: "", registername: "", registeremail: "", loading: !1, message: "", bsstyle: "", loggedin: t }, this.handleChange = this.handleChange.bind(this), this.handleGenerateOTP = this.handleGenerateOTP.bind(this), this.handleRegisterSubmit = this.handleRegisterSubmit.bind(this), this.handleLogin = this.handleLogin.bind(this), this.handleRegisterClickHere = this.handleRegisterClickHere.bind(this), this.handleLoginClickHere = this.handleLoginClickHere.bind(this) } handleChange(e) { switch (e.target.name) { case "loginemail": this.setState({ loginemail: e.target.value }); break; case "OTP": this.setState({ OTP: e.target.value }); break; case "registeremail": this.setState({ registeremail: e.target.value }); break; case "registername": this.setState({ registername: e.target.value }) } } handleLogin(e) { e.preventDefault(), this.setState({ loading: !0 }), fetch("//" + window.location.host + "/api/Members/Login", { method: "post", body: JSON.stringify({ ID: this.state.loginemail, Passcode: this.state.OTP }), headers: { "Content-Type": "application/json" } }).then(e => { 200 === e.status ? e.json().then(e => { console.log(e), void 0 !== e.token && (localStorage.setItem("token", e.token), localStorage.setItem("user", e.member), this.setState({ bsstyle: "", message: "", loggedin: !0 }), void 0 !== this.props.onLogin ? this.props.onLogin() : this.setState({ redirectto: "/" })) }) : 404 === e.status && e.json().then(e => { this.setState({ bsstyle: "danger", message: e.error, loading: !1 }) }) }) } handleGenerateOTP(e) { e.preventDefault(), this.setState({ loading: !0 }), fetch("//" + window.location.host + "/api/Members/OTP?id=" + this.state.loginemail, { method: "get", headers: { "Content-Type": "application/json" } }).then(e => { 200 === e.status ? this.setState({ GenerateOTPButton: !1, loading: !1, bsstyle: "success", message: "An OTP has been sent to your email address from waarta@rudrasofttech.com. Please verify and login. Please do check SPAM folder of your email." }) : this.setState({ bsstyle: "danger", message: "Email is not registered with us.", loading: !1 }) }) } handleRegisterSubmit(e) { return e.preventDefault(), this.setState({ loading: !0 }), fetch("//" + window.location.host + "/api/Members", { method: "post", body: JSON.stringify({ Name: this.state.registername, Email: this.state.registeremail, Phone: "", CountryCode: "" }), headers: { "Content-Type": "application/json" } }).then(e => { console.log(e.status), 200 === e.status ? this.setState({ loading: !1, bsstyle: "success", message: "Your registration is complete, an OTP has been sent to your email address from waarta@rudrasofttech.com. Please verify and login. Please do check SPAM folder of your email.", loggedin: !1, loginemail: this.state.registeremail, showregisterform: !1 }) : 400 === e.status ? e.json().then(e => { this.setState({ loading: !1, bsstyle: "danger", message: e.Error[0] }) }) : this.setState({ loading: !1, bsstyle: "danger", message: "Unable to process your request please try again." }) }), !1 } handleRegisterClickHere() { this.setState({ showregisterform: !0, message: "" }) } handleLoginClickHere() { this.setState({ showregisterform: !1, message: "" }) } renderOTPForm() { return React.createElement("form", { autoComplete: "off", onSubmit: this.handleGenerateOTP }, React.createElement("div", { className: "mb-3" }, React.createElement("label", null, "Mobile or Email"), React.createElement("input", { type: "text", className: "form-control", required: !0, name: "loginemail", value: this.state.loginemail, onChange: this.handleChange, placeholder: "Mobile or Email" })), React.createElement("button", { className: "btn btn-dark", type: "submit" }, "Generate OTP")) } renderLoginForm() { return React.createElement("form", { onSubmit: this.handleLogin }, React.createElement("div", { className: "mb-3" }, React.createElement("label", null, "Mobile or Email"), React.createElement("input", { type: "text", className: "form-control", required: !0, name: "loginemail", value: this.state.loginemail, onChange: this.handleChange, placeholder: "Mobile or Email" })), React.createElement("div", { className: "mb-3" }, React.createElement("label", null, "OTP"), React.createElement("input", { className: "form-control", required: !0, name: "OTP", type: "password", onChange: this.handleChange })), React.createElement("button", { className: "btn btn-dark", type: "submit" }, "Verify")) } static getDerivedStateFromProps(e, t) { return e.beginWithRegister !== t.beginWithRegister ? { someState: e.beginWithRegister } : null } render() { let e = this.state.loading ? React.createElement("div", { className: "progress", style: { height: "5px" } }, React.createElement("div", { className: "progress-bar progress-bar-striped progress-bar-animated", role: "progressbar", "aria-valuenow": "75", "aria-valuemin": "0", "aria-valuemax": "100", style: { width: "100%" } })) : null, t = "" !== this.state.message ? React.createElement("div", { className: "mt-1 alert alert-" + this.state.bsstyle }, this.state.message) : null, a = this.state.GenerateOTPButton ? this.renderOTPForm() : this.renderLoginForm(), s = this.state.showregisterform ? React.createElement("div", null, React.createElement("h3", null, "Register"), React.createElement("div", null, React.createElement("form", { autoComplete: "off", onSubmit: this.handleRegisterSubmit }, React.createElement("div", { className: "mb-3" }, React.createElement("label", null, "Your Name"), React.createElement("input", { type: "text", className: "form-control", required: !0, name: "registername", value: this.state.registername, onChange: this.handleChange })), React.createElement("div", { className: "mb-3" }, React.createElement("label", null, "Your Email"), React.createElement("input", { type: "email", className: "form-control", required: !0, name: "registeremail", value: this.state.registeremail, onChange: this.handleChange, placeholder: "me@bolo.com" }), React.createElement("small", { className: "form-text text-muted" }, "We'll never share your email with anyone else.")), React.createElement("button", { className: "btn btn-dark", type: "submit" }, "Submit")), React.createElement("p", { className: "text-center mt-2" }, "Already a Member! ", React.createElement("a", { onClick: this.handleLoginClickHere, className: "link-success" }, "Login Here"), " "), t, e)) : React.createElement("div", null, React.createElement("h3", null, "Login"), React.createElement("div", null, a, React.createElement("p", { className: "text-center mt-2" }, "Register for FREE ", React.createElement("a", { onClick: this.handleRegisterClickHere, className: "link-success" }, "Click Here")), t, e)); return React.createElement("div", null, s) } }