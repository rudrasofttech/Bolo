@using Bolo.Hubs
@using Microsoft.Extensions.Configuration
@using Bolo.Data
@using Microsoft.AspNetCore.SignalR
@using Bolo.Models
@using Bolo.Helper

@inject IConfiguration Configuration

@{
    string fbappid = Configuration["FacebookAppID"];
    ViewBag.applicationServerKey = Configuration["VAPIDpublicKey"];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    <link rel="manifest" href="@Url.Content("~/manifest.json")" />
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/custom.css" rel="stylesheet" />
    <link href="~/css/ReactCrop.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />
    <script src="~/libs/jquery-3.6.0.min.js"></script>
    <script src="~/libs/react.development.js"></script>
    <script src="~/libs/react-dom.development.js"></script>
    <script src="~/libs/react-dayjs/dist/index.js"></script>
    <environment include="Development">
        <script src="~/libs/babel.min.js" charset="utf-8"></script>
    </environment>
    @RenderSection("head", false)
</head>
<body class="bg-light">
    <div class="container-lg fixed-top">
        <div class="row">
            <div class="col rounded-bottom rounded-2 bg-white">
                <table cellpadding="5" cellspacing="0" style="width:100%">
                    <tbody>
                        <tr>
                            <td>
                                <a href="@Url.Content("~/")" class="text-dark text-decoration-none fs-2 fw-bold">Waarta</a>
                            </td>
                            <td align="right" valign="middle" width="100px">
                                <button type="button" class="btn btn-link text-decoration-none text-dark fs-3 notificationcountcnt position-relative" title="Notifications" data-bs-toggle="modal" data-bs-target="#NotificationModal"></button>
                            </td>
                            <td align="center" valign="middle" width="55px">
                                <a class="text-dark fs-3" href="@Url.Content("~/")" title="Home"><i class="bi bi-house"></i></a>
                            </td>
                            <td align="center" valign="middle" width="55px">
                                <a class="text-dark fs-3" href="@Url.Content("~/addpost")" title="Add Post"><i class="bi bi-journal-plus"></i></a>
                            </td>

                            <td align="center" valign="middle" width="55px">
                                <a class="text-dark fs-3" href="@Url.Content("~/profile/")" title="Profile" id="profilemenuanchor">
                                    <script>
                                        try {
                                            var member = JSON.parse(localStorage.getItem("myself"));
                                            if (member.pic !== "") {
                                                document.write("<img src='" + member.pic + "' class='profile-icon rounded' />");
                                            } else {
                                                document.write('<i class="bi bi-person-square"></i>');
                                            }
                                        } catch (err) {
                                            document.write('<i class="bi bi-person-square"></i>');
                                        }
                                    </script>
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="5" class="p-2" align="left" valign="middle" id="search" height="49px">
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        @RenderSection("toolbar", false)
    </div>
    <div id="root" class="container-lg g-0" style="min-height: 500px;">
        @RenderBody()
    </div>
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="messageToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto messageheading">New Message</strong>
                <small class="messagetime"></small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
            </div>
        </div>
    </div>
    <div class="modal fade" id="NotificationModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title" id="notificationModalLabel"><i class="bi bi-bell"></i> Notifications</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="notificationscont"></div>
                </div>
            </div>
        </div>
    </div>

    
    <script src="~/libs/dayjs/dayjs.min.js"></script>
    <script src="~/libs/dayjs/plugin/utc.min.js"></script>
    <script src="~/libs/signalr.min.js"></script>
    <script src="~/libs/hyperHtml/min.min.js"></script>
    <script>const { bind, wire } = hyperHTML;</script>
    <script src="~/libs/ReactCrop.min.js"></script>
    <script src="~/libs/moment.min.js"></script>
    <script src="~/libs/simplepeer.min.js"></script>
    <script src="~/libs/fabric.min.js"></script>
    <script src="~/libs/bootstrap.min.js"></script>
    <script src="~/js/site.js"></script>
    <script type="text/javascript">
        var sgrkr = new SiteGeneralWorker("@Url.Content("~/api/members/savepulse?s=1")", "@ViewBag.applicationServerKey");
        sgrkr.registerServiceWorker();
        setInterval(function () {
            sgrkr.updateOfflineStatus();
        }, sgrkr.offlineStatusCheckInterval);

        let uhClient = new UniversalHubClient();
        $(document).ready(async () => {
            await uhClient.start();
            uhClient.joinUniversalGroup();
        });

        setInterval(function () {
            sgrkr.sendPulse();
        }, sgrkr.sendPulseInterval);
        if (localStorage.getItem("token") !== null) {
            sgrkr.showNotificationPermissionModal();
        }
        
        document.getElementById('NotificationModal').addEventListener('shown.bs.modal', event => {
            console.log("shown.bs.modal");
            sgrkr.setSeenAllNotification();
        });
        $(document).ready(function () {
            sgrkr.getNotifications();
            
        });
    </script>
    <environment include="Development">
        <script type="text/babel" src="~/js/Components.js"></script>
    </environment>
    <environment include="Staging,Production" exclude="Development">
        <script src="~/js/compiled/Components.js"></script>
    </environment>

    @RenderSection("scripts", false)
    <environment include="Development">
        <script type="text/babel">
            ReactDOM.render(
            <Search/>,
            document.getElementById('search')
            );
        </script>
    </environment>
    <environment include="Staging,Production" exclude="Development">
        <script>
            "use strict";
            ReactDOM.render(React.createElement(Search, {}), document.getElementById('search'));
        </script>
    </environment>
    <script>
        // Check that service workers are supported
        if ('serviceWorker' in navigator) {
            // Use the window load event to keep the page load performant
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('@Url.Content("~/serviceWorker.js")');
            });
        }
    </script>
</body>
</html>
