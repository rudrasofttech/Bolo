@using Bolo.Hubs
@using Microsoft.Extensions.Configuration
@using Bolo.Data
@using Microsoft.AspNetCore.SignalR
@using Bolo.Models
@using Bolo.Helper 
 
@inject IConfiguration Configuration
@inject BoloContext context
@inject IHubContext<UniversalHub> hubContext
@{
    string fbappid = Configuration["FacebookAppID"];
    ViewBag.applicationServerKey = Configuration["VAPIDpublicKey"];
    List<NotificationSmallDTO> notifications = new List<NotificationSmallDTO>();
    NotificationHelper nworker = new NotificationHelper(context, hubContext);
    if (User.Identity.IsAuthenticated)
    {
        nworker.TargetUser = context.Members.FirstOrDefault(t => t.Email == User.Identity.Name);
        notifications.AddRange(nworker.GetNotifications().Select(t => new NotificationSmallDTO(t)).ToList());
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    <link rel="manifest" href="@Url.Content("~/manifest.json")" />
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/custom.css" rel="stylesheet" />
    <link href="~/css/ReactCrop.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />
    <script src="~/libs/jquery-3.6.0.min.js"></script>
    <script src="~/libs/react.development.js"></script>
    <script src="~/libs/react-dom.development.js"></script>
    <script src="~/libs/react-dayjs/dist/index.js"></script>
    <environment include="Development">
        <script src="~/libs/babel.min.js" charset="utf-8"></script>
    </environment>
    @RenderSection("head", false)
</head>
<body>
    <div class="container-xl px-0 fixed-top bg-light maxwidth border border-top-0">
        <table cellpadding="5" cellspacing="0" style="width:100%" class="my-1">
            <tbody>
                <tr>
                    <td>
                        <a href="@Url.Content("~/")" class="text-dark text-decoration-none fs-4">Waarta</a>
                    </td>
                    <td align="center" valign="middle" width="55px">
                        <a class="text-dark fs-3" href="@Url.Content("~/")" title="Home"><i class="bi bi-house"></i></a>
                    </td>
                    <td align="center" valign="middle" width="55px">
                        <a class="text-dark fs-3" href="@Url.Content("~/addpost")" title="Add Post"><i class="bi bi-journal-plus"></i></a>
                    </td>
                    <td align="center" valign="middle" width="55px">
                        <a class="text-dark fs-3" href="@Url.Content("~/notification")" title="Notifications"><i class="bi bi-bell"></i></a>
                    </td>
                    <td align="center" valign="middle" width="55px">
                        <a class="text-dark fs-3" href="@Url.Content("~/profile/")" title="Profile" id="profilemenuanchor">
                            <i class="bi bi-person-badge"></i>
                        </a>
                    </td>
                </tr>
                <tr>
                    <td colspan="5" class="p-2" align="left" valign="middle" id="search" height="49px">
                    </td>
                </tr>
            </tbody>
        </table>
        @RenderSection("toolbar", false)
    </div>
    <div id="root" class="container-xl maxwidth g-0" style="min-height: calc(100vh - 143px);">
        @RenderBody()
    </div>
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="messageToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto messageheading">New Message</strong>
                <small class="messagetime"></small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
            </div>
        </div>
    </div>
    <div class="modal fade" id="NotificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title" id="notificationModalLabel"><i class="bi bi-bell"></i> Notifications</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="msgnotificationscont"></div>
                    <div id="cmpnotificationscont"></div>
                </div>
            </div>
        </div>
    </div>
    @if (User.Identity.IsAuthenticated)
    {
        <div class="modal fade" id="askNotificationPermissionModal" tabindex="-1" aria-labelledby="askNotificationPermissionModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="askNotificationPermissionModalLabel">Subscribe Notifications</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="text-center">
                            <button id="PromptForAccessBtn" class="btn btn-danger btn-lg">Yes, Send Me Notification</button>
                        </div>
                        <div id="NoSupport" class="d-none alert alert-danger text-center my-2" role="alert">
                            Your browser does not support Push Notifications or you have blocked notifications
                        </div>
                        <form asp-controller="Home" asp-action="SubscribeNotification" id="notificationaccessform" class="d-none">
                            <input id="endpoint" name="endpoint" hidden />
                            <input id="p256dh" name="p256dh" hidden />
                            <input id="auth" name="auth" hidden />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
    <script src="~/libs/signalr.min.js"></script>
    <script src="~/libs/hyperHtml/min.min.js"></script>
    <script>const { bind, wire } = hyperHTML;</script>
    <script src="~/libs/ReactCrop.min.js"></script>
    <script src="~/libs/moment.min.js"></script>
    <script src="~/libs/simplepeer.min.js"></script>
    <script src="~/libs/fabric.min.js"></script>

    <script src="~/js/site.js"></script>
    <script type="text/javascript">
        var sgrkr = new SiteGeneralWorker("@Url.Content("~/account/pulse")", "@ViewBag.applicationServerKey");
        sgrkr.registerServiceWorker();
        setInterval(function () {
            sgrkr.updateOfflineStatus();
        },
            sgrkr.offlineStatusCheckInterval);

        let uhClient = new UniversalHubClient();

    </script>
    @if (User.Identity.IsAuthenticated)
    {
        <script>
            $(document).ready(async () => {
                await uhClient.start();
                uhClient.joinUniversalGroup();
            });

            setInterval(function () {
                sgrkr.sendPulse();
            }, sgrkr.sendPulseInterval);

            sgrkr.showNotificationPermissionModal();
            //sgrkr.notifications = JSON.parse('@Html.Raw(Json.Serialize(notifications).ToString().Replace("'", "\'"))');
            sgrkr.renderNotifications();
        </script>
    }
    <environment include="Development">
        <script type="text/babel" src="~/js/Conversation.js"></script>
        <script type="text/babel" src="~/js/Home.js"></script>
        <script type="text/babel" src="~/js/MemberPost.js"></script>
        <script type="text/babel" src="~/js/Profile.js"></script>
    </environment>
    <environment include="Staging,Production" exclude="Development">
        <script src="~/js/compiled/Conversation.js"></script>
        <script src="~/js/compiled/Home.js"></script>
        <script src="~/js/compiled/MemberPost.js"></script>
        <script src="~/js/compiled/Profile.js"></script>
    </environment>
    <script src="~/libs/bootstrap.min.js"></script>
    @RenderSection("scripts", false)
    <environment include="Development">
        <script type="text/babel">
            ReactDOM.render(
            <Search/>,
            document.getElementById('search')
            );
        </script>
    </environment>
    <environment include="Staging,Production" exclude="Development">
        <script>
            "use strict";
            ReactDOM.render(React.createElement(Search, {}), document.getElementById('search'));
        </script>
    </environment>
    <script>
        // Check that service workers are supported
        if ('serviceWorker' in navigator) {
            // Use the window load event to keep the page load performant
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('@Url.Content("~/serviceWorker.js")');
            });
        }
    </script>
</body>
</html>
